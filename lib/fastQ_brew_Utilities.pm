#
# Utility module for fastQ_brew
#
# Please direct questions and support issues to <https://github.com/dohalloran/fastQ_brew/issues>
#
# Author: Damien O'Halloran, The George Washington University, 2017
#
# GNU GENERAL PUBLIC LICENSE
#
# POD documentation before the code

=head1 NAME

fastQ_brew_Utilities - utilities for fastQ_brew

=head2 SYNOPSIS

  use Moose;
  use Modern::Perl;
  use base 'Exporter';
  use List::Util qw(sum);
  use autodie;

=head2 DESCRIPTION

This package provides Utility support to fastQ_brew

=head2 Support

All contributions are welcome

=head2 Reporting Bugs

Report bugs to the fastQ_brew bug tracking system to help keep track
of the bugs and their resolution. Bug reports can be submitted via the
web:
  https://github.com/dohalloran/fastQ_brew/issues

=head1 APPENDIX

The rest of the documentation details each of the object methods.

=cut

package fastQ_brew_Utilities;

use Moose;
use Modern::Perl;
use base 'Exporter';
use List::Util qw(sum);
use autodie;

our @EXPORT = qw/ _prob_calc /;

# hashes containing Error probs
my %sanger_prob = (
    "\!"   => 1.000000000000000,
    "\â€œ"   => 0.794328234700000,
    "\#"   => 0.630957344500000,
    "\$"   => 0.501187233600000,
    "\%"   => 0.398107170600000,
    "\&"   => 0.316227766000000,
    "\'"   => 0.251188643200000,
    "\("   => 0.199526231500000,
    "\)"   => 0.158489319200000,
    "\*"   => 0.125892541200000,
    "\+"   => 0.100000000000000,
    "\,"   => 0.079432823500000,
    "\-"   => 0.063095734400000,
    "\."   => 0.050118723400000,
    "\/"   => 0.039810717100000,
    "0"    => 0.031622776600000,
    "1"    => 0.025118864300000,
    "2"    => 0.019952623100000,
    "3"    => 0.015848931900000,
    "4"    => 0.012589254100000,
    "5"    => 0.010000000000000,
    "6"    => 0.007943282300000,
    "7"    => 0.006309573400000,
    "8"    => 0.005011872300000,
    "9"    => 0.003981071700000,
    "\:"   => 0.003162277700000,
    ";"    => 0.002511886400000,
    "\<"   => 0.001995262300000,
    "\="   => 0.001584893200000,
    "\>"   => 0.001258925400000,
    "\?"   => 0.001000000000000,
    "\@"   => 0.000794328200000,
    "A"    => 0.000630957300000,
    "B"    => 0.000501187200000,
    "C"    => 0.000398107200000,
    "D"    => 0.000316227800000,
    "E"    => 0.000251188600000,
    "F"    => 0.000199526200000,
    "G"    => 0.000158489300000,
    "H"    => 0.000125892500000,
    "I"    => 0.000100000000000,
    "J"    => 0.000079432800000,
    "K"    => 0.000063095700000,
    "L"    => 0.000050118700000,
    "M"    => 0.000039810700000,
    "N"    => 0.000031622800000,
    "O"    => 0.000025118900000,
    "P"    => 0.000019952600000,
    "Q"    => 0.000015848900000,
    "R"    => 0.000012589300000,
    "S"    => 0.000010000000000,
    "T"    => 0.000007943300000,
    "U"    => 0.000006309600000,
    "V"    => 0.000005011900000,
    "W"    => 0.000003981100000,
    "X"    => 0.000003162300000,
    "Y"    => 0.000002511900000,
    "Z"    => 0.000001995300000,
    "\["   => 0.000001584900000,
    "\\"   => 0.000001258900000,
    "\]"   => 0.000001000000000,
    "\^"   => 0.000000794300000,
    "\_"   => 0.000000631000000,
    "\`"   => 0.000000501200000,
    "a"    => 0.000000398100000,
    "b"    => 0.000000316200000,
    "c"    => 0.000000251200000,
    "d"    => 0.000000199500000,
    "e"    => 0.000000158500000,
    "f"    => 0.000000125900000,
    "g"    => 0.000000100000000,
    "h"    => 0.000000079400000,
    "i"    => 0.000000063100000,
    "j"    => 0.000000050100000,
    "k"    => 0.000000039800000,
    "l"    => 0.000000031600000,
    "m"    => 0.000000025100000,
    "n"    => 0.000000020000000,
    "o"    => 0.000000015800000,
    "p"    => 0.000000012600000,
    "q"    => 0.000000010000000,
    "r"    => 0.000000007900000,
    "s"    => 0.000000006300000,
    "t"    => 0.000000005000000,
    "u"    => 0.000000004000000,
    "v"    => 0.000000003200000,
    "w"    => 0.000000002500000,
    "x"    => 0.000000002000000,
    "y"    => 0.000000001600000,
    "z"    => 0.000000001300000,
    "\{"   => 0.000000001000000,
    "\|"   => 0.000000000800000,
    "\}"   => 0.000000000600000,
    "\~"   => 0.000000000500000
);

my %illumina_prob = (
    "@"  => 1.000000000000000,
    "A"  => 0.794328234700000,
    "B"  => 0.630957344500000,
    "C"  => 0.501187233600000,
    "D"  => 0.398107170600000,
    "E"  => 0.316227766000000,
    "F"  => 0.251188643200000,
    "G"  => 0.199526231500000,
    "H"  => 0.158489319200000,
    "I"  => 0.125892541200000,
    "J"  => 0.100000000000000,
    "K"  => 0.079432823500000,
    "L"  => 0.063095734400000,
    "M"  => 0.050118723400000,
    "N"  => 0.039810717100000,
    "O"  => 0.031622776600000,
    "P"  => 0.025118864300000,
    "Q"  => 0.019952623100000,
    "R"  => 0.015848931900000,
    "S"  => 0.012589254100000,
    "T"  => 0.010000000000000,
    "U"  => 0.007943282300000,
    "V"  => 0.006309573400000,
    "W"  => 0.005011872300000,
    "X"  => 0.003981071700000,
    "Y"  => 0.003162277700000,
    "Z"  => 0.002511886400000,
    "["  => 0.001995262300000,
    "\\" => 0.001584893200000,
    "]"  => 0.001258925400000,
    "\^" => 0.001000000000000,
    "\_" => 0.000794328200000,
    "\`" => 0.000630957300000,
    "a"  => 0.000501187200000,
    "b"  => 0.000398107200000,
    "c"  => 0.000316227800000,
    "d"  => 0.000251188600000,
    "e"  => 0.000199526200000,
    "f"  => 0.000158489300000,
    "g"  => 0.000125892500000,
    "h"  => 0.000100000000000,
    "i"  => 0.000079432800000,
    "j"  => 0.000063095700000,
    "k"  => 0.000050118700000,
    "l"  => 0.000039810700000,
    "m"  => 0.000031622800000,
    "n"  => 0.000025118900000,
    "o"  => 0.000019952600000,
    "p"  => 0.000015848900000,
    "q"  => 0.000012589300000,
    "r"  => 0.000010000000000,
    "s"  => 0.000007943300000,
    "t"  => 0.000006309600000,
    "u"  => 0.000005011900000,
    "v"  => 0.000003981100000,
    "w"  => 0.000003162300000,
    "x"  => 0.000002511900000,
    "y"  => 0.000001995300000,
    "z"  => 0.000001584900000,
    "{"  => 0.000001258900000,
    "|"  => 0.000001000000000,
    "}"  => 0.000000794300000,
    "~"  => 0.000000631000000
);

####################################

=head1 prob_calc

 Title   :  prob_calc
 Usage   :  $prob = prob_calc( $read, $lib, $cuttoff );
 Function:  dertmines error probability for each read
 Returns :  1 or 0 
 
=cut

sub _prob_calc{
    my $seq      = $_[0];
    my $lib      = $_[1];
    my $cuttoff  = $_[2];
    my $score_prob;
    my @prob_array;

        foreach my $i ( split //, $seq ) {
            if ( $lib eq "sanger" ) {
                push @prob_array, $sanger_prob{$i};
                $score_prob += $sanger_prob{$i};
            }
            elsif ( $lib eq "illumina" ) {
                push @prob_array, $illumina_prob{$i};
                $score_prob += $illumina_prob{$i};
            }
        }
        my $error_prob = ((sprintf "%.10f", sum(@prob_array))*100)/length $seq; 

       if ( $error_prob > $cuttoff ) {
       	    return 0;
        }
        else {
            return 1;
        }
    return 0;
}
####################################
####################################

1;
